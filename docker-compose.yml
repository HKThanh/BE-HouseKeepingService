services:
  app:
    build: .
    image: 21086351huynhkimthanh/house_keeping_app:latest
    container_name: be_housekeeping_app
    restart: on-failure
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/house_keeping
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - SPRING_JPA_SHOW_SQL=false
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRATION=${JWT_ACCESS_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - TZ=Asia/Ho_Chi_Minh
      - SPRING_JACKSON_TIME_ZONE=Asia/Ho_Chi_Minh
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - CLOUDINARY_CUSTOMER_FOLDER=${CLOUDINARY_CUSTOMER_FOLDER:-customer_avatars}
    networks:
      - house_keeping_network

  postgres:
    image: postgres:15
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=house_keeping
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./postgres_data/data:/var/lib/postgresql/data
      - ./postgres_data/housekeeping_service_v8.sql:/docker-entrypoint-initdb.d/housekeeping_service_v8.sql
    networks:
      - house_keeping_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d house_keeping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - house_keeping_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  house_keeping_network:
    driver: bridge